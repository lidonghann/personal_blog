# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2018-12-11 09:18
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('blog', '0002_blog_blog_label'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_content', models.CharField(max_length=200)),
                ('comment_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=20)),
            ],
        ),
        migrations.RenameField(
            model_name='blog',
            old_name='reading_volume',
            new_name='comment_quantity',
        ),
        migrations.RemoveField(
            model_name='blog',
            name='comment',
        ),
        migrations.AddField(
            model_name='blog',
            name='reading_quantity',
            field=models.IntegerField(default=0),
        ),
        migrations.RemoveField(
            model_name='blog',
            name='blog_label',
        ),
        migrations.AddField(
            model_name='comment',
            name='blog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Blog'),
        ),
        migrations.AddField(
            model_name='comment',
            name='comment_author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blog',
            name='blog_label',
            field=models.ManyToManyField(blank=True, to='blog.Tags'),
        ),
    ]
